!function(l){var n={};function u(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return l[e].call(t.exports,t,t.exports,u),t.l=!0,t.exports}u.m=l,u.c=n,u.d=function(l,n,e){u.o(l,n)||Object.defineProperty(l,n,{enumerable:!0,get:e})},u.r=function(l){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(l,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(l,"u",{value:!0})},u.t=function(l,n){if(1&n&&(l=u(l)),8&n)return l;if(4&n&&"object"==typeof l&&l&&l.u)return l;var e=Object.create(null);if(u.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:l}),2&n&&"string"!=typeof l)for(var t in l)u.d(e,t,function(n){return l[n]}.bind(null,t));return e},u.n=function(l){var n=l&&l.u?function(){return l.default}:function(){return l};return u.d(n,"a",n),n},u.o=function(l,n){return Object.prototype.hasOwnProperty.call(l,n)},u.p="",u(u.s=13)}({0:function(l,n,u){"use strict";u.d(n,"a",(function(){return e}));const e=[{id:0,name:"Peter",money:10},{id:1,name:null,money:null},{id:2,name:"Mary",money:500}]},13:function(l,n,u){"use strict";u.r(n);var e=u(0);e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0),console.log(e.a.filter(l=>null!==l.money).map(l=>2*l.money).reduce((l,n)=>l+n,0))}});